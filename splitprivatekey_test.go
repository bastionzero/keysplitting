package keysplitting

import (
	"crypto/rand"
	"crypto/rsa"
	"math/big"

	. "github.com/onsi/ginkgo/v2"
	. "github.com/onsi/gomega"
)

const mockPemEncodedKey = `-----BEGIN RSA SPLIT PRIVATE KEY-----
MIIJszCCBNoEggTRODEzNzYwMzU1MDc5ODk1NDkwMzQzNTY4MDU4NDA5NDgzODEz
MjMzNTEwMDM0Mzc1MTIyMDc2MzIwNzY2NTA4NTUzNDAwNDA0NDU3MTkwNzM5NDk0
MTUyMDE2ODk3MzQyMjQ4OTQzNjI1MzE1NjI5NjU0NDkzMDQzMjQ2NDI4MTAzNTEw
MzgwNDUxNzU1MDEwNTg0MzAyMzY2MDAzNjEzOTc5NDAyNDg5ODE1OTA2MjU0MTIz
NzQ5MTA2OTE2NDcwOTQwNTA3MjMwMTAxMDkwNzg4MTE1OTE1Njk3OTgyNTg1Nzg2
NTc3MDYzNTA3MDI5NzA3NzY1NDczMDIxNjQyNzY2MDUzODU3NTg0NDIzNDk3Mjg1
MDE2MzEyNzc5ODg0ODgxNzM0OTk1OTU2NjM2MjYyNDI4NzQwNjU4NDc2MDM2ODQy
ODUzNDIxMTExODM3MDk4Mjg1MzAwMjc1NzY1MDMwNjI2MDYxMzM1NzU5MDQ3OTM1
NTU5NDMwNzczMzMyOTk4OTI4MjcyNzY0NDI3MDIzNTE2MzUxMDY1ODM1MDU4NzI2
NTgwMTAzNDgyODQ1Mzg3NjIxNjUyMDM3NDE2MTE2MzM3NjA0Mjk0NzMxOTcwMTU1
MzY3ODgzNjAzNzk2MjIyNzIxODM4NzA5MjIxNTc4Mjc3Mjk4MDc5MDY4MjU1NDI4
OTkyODc0MTE3NTQxMzM3NzM1NTE0NDQzNzAzOTU5MjI5MjYyNTc2NDQ1MTU4MTU0
NDAzMDgzNDg4Njg5MzUzODg1MDA2MTI4ODE0MjU1NjIyNjAwMzg1ODU1MzY2NjI5
NjI1NTIwNDE5MzA0NTE4NzYyODkxMzc4MzYzMzk0MTgwMzMxNTIyMTYwMjQ4NzI1
MjkzNDIyNDMzMDU4NDgwNDMwMjIyOTgyMDY3Nzc1NzgyMzU4NTU4OTA2ODYxODYx
MTc1NTA4NTI0MDE0NjIxMDc2MzgzOTMzNzE2NTg2MjAxMzAxMDAxODM4NTA4NTc2
NzU2MTQzMDk1NzI5NDA4MjUzMzU0NTkxNjc3NDQ0MDEwMjcxMTE2NjMwMDUwODg0
MTI2NDEwMjA5NTE1OTQ3NDIzMDIyMTczMzMzNDI5MTgwNjA0NzgxNjA4MDg4MzI4
NjIyMDQzMjkwMzU0NjUxMTY1NTE0MDY0MzYxNTY0NjgzMjA3NTU5MzE0NTYwNjcz
OTE0MjM4MzIzNjAxMjI5ODgwODQ2NTY1MDc5NjI2NjE3NDA1MzE4MjI1MTgwMTA5
NDkxNjQxOTY0NjI3MjQ5NzE4MTAzNTQ0MjE4MzM1MTU5MzQ5NzE4NjQzMTkyOTky
MjkzMTY0MTI3MDc0MTQ0NzM5ODAwNzkzNTczNTEyODc2ODgwMTc0MzQ0NTMwMjI4
NDk4OTQwODczNTIxMjc1MDE3OTgwNDc5NTI0NjI4NzY0MjIxMzcxNzE2NTIwODIy
ODU1NTkxMzE0NDkzMzE5NzY3MzY3NDMxMzk4OTMxMTE5ODUxOTc3NTA2NzI5NTQz
MzEyMDQ3OTUxODk5NjA0NDM5MDMwMDE5NDkxMjYwMDgxMDQwOTkwOTM4OTY3NzE2
MTU5MzU4MzkyMjI3MzM0MzY1MDM5MzcyMTk4OTg2MjY4MDk2MjA5NDU5ODQ5AgMB
AAEEggTRNDYxNTc5OTY4OTk1MzAyMjA2OTAzNjY4NzY3NzA3MjEwOTY0NzM1MDg1
NDkyNTIyNjM1NjI4OTU3MTk4OTU3NTgzMTExNDU0MjQ0OTQwMTgzNzcxNjc0NjAx
NzI1MzY0MTgwOTEyOTQyMjMxMDY1NDU0NjY4MzA3Mzc4MjU1ODQzMTU0Mjk3MDUx
NTU1NzU4MzIwOTk0NzU2ODE2MDIwNTM5MTU4NzM1OTA5MjQ3NDgyNzU5ODA2MjY4
MDkzNzUxODk1NzMxMjkxMTk3NTQ1NzkxMTY1MDkwOTM5OTMyMDE1NjQwMDMxNjU0
NjkyMjM5NjU1ODQ0NzQwNjA1NzM2ODIxMDkyOTY3MTc1MjczMDM5ODc3MjI2MTQ0
NDMyMzQ3MjA2NTMwMjg0NTk0NzA4NzAyOTkxNTg1MDg1MTg4NTc1NDA0MDcyNjQ1
Mzg2NzcxMDkyMjQ1OTI2OTIxMDUzNDgxNzY3NDAyODM4ODI2MDYyOTU3OTgzOTY1
NTM4NDkyMDYzNjk4NzMzNjU5Mzg2MDk3NTM5NjE3ODczMzc0MjU2MTc2Mjc2ODI2
OTM2MTA5MzY5NzUwNzY1Nzc2ODIxNjQxNjkzMTgwOTgwMzczNzczNzUyMDcyMTYy
NjkxNDIzMzIyMTU3NDI4NDQ5NjA3MDU3Njc5MzcwODYxNTIwMzcwNzU5Mjk2MDk2
NzcyMjgyMjg1NDIyOTkyNDE1NDk0OTEzOTQ1NzAwNjkxOTU0MTUzNzU4OTgwOTA5
MDc4MzY0NDEyNzc4OTM4NDAyMTY1NjY2NjMwMTAxNTg4ODk0NTIwNzM5MzEwMTU2
MDU4MTYwNjU0MzU2NjA2ODMzMTAxMzg0MDgxNjY1MjI1OTM2MTg3ODU3ODYxODky
MzI3MzE3OTI4ODA5NDEyNzQyODkwMjgwNTk0Nzc0ODYwNDg1MDM1ODE2MDg3MTEw
NTA5ODU0NTg2NTQwMDU0NjkwMDMwNTAwNTUwNjMwNjQ0NDU3MjE1MjkwODI3MjAw
MTE1MTg4MjI0NzAxNTc0MDY2ODMxMjc3NTI3Mzk2NjE1NDk5MjUwMTk4MzEwOTE3
NzAwMzcyNTYyNzQ0MzU0NjQzOTgyMjc3OTgxMTk5MTMyNTU5OTE2NTA4MDU5NjA0
NTc3NTQ3NDUxMzc5OTk1NDQxNDMzOTg3NTUwMTQ1NTY5MTkyOTc2NTMzODE1MjY0
NTUxNTAxNTI5ODI3MTEzNTgzMTAyNDYyMTAyMTk1MTE5NTA3MjAwMzkyNDczMTgw
NDI0NTU2MzA3OTgxMTYwODAwMDkzNTAzNTQ1MjMzMTU2NzIzNTMwMTg1MTE3MjY1
MTc1MTI4Njc0NDk3NDc1NzU3NDQxMTE3MDM1OTc3OTM4OTg0MjMxMTM4NzYzMjA0
NzkzMjAzNjU3NDMwMDI2MzAzODE3MTk4MjQzMjE4MjYyMzYxOTA0OTc4ODA2ODQz
MjI4ODY2OTIxOTM3MjI4MDYxMTk3OTE0MzIyODYyNTA5NzE3Mjk0NDAwNzQzNjY3
NTg1NzQ5MTMzNTc4MTUzMTMxNjQ3NTIwMDYyNTc5ODQ1NTIwMTQ2ODgwNDk2OTYy
MzkxMTI0MTYwNzA2NDg0NDczODYxMTg5MzkyMjE2NjUyNDI5NDA3
-----END RSA SPLIT PRIVATE KEY-----
`

var mockSplitPrivateKey = &SplitPrivateKey{
	PublicKey: &rsa.PublicKey{
		N: new(big.Int).SetBytes([]byte("813760355079895490343568058409483813233510034375122076320766508553400404457190739494152016897342248943625315629654493043246428103510380451755010584302366003613979402489815906254123749106916470940507230101090788115915697982585786577063507029707765473021642766053857584423497285016312779884881734995956636262428740658476036842853421111837098285300275765030626061335759047935559430773332998928272764427023516351065835058726580103482845387621652037416116337604294731970155367883603796222721838709221578277298079068255428992874117541337735514443703959229262576445158154403083488689353885006128814255622600385855366629625520419304518762891378363394180331522160248725293422433058480430222982067775782358558906861861175508524014621076383933716586201301001838508576756143095729408253354591677444010271116630050884126410209515947423022173333429180604781608088328622043290354651165514064361564683207559314560673914238323601229880846565079626617405318225180109491641964627249718103544218335159349718643192992293164127074144739800793573512876880174344530228498940873521275017980479524628764221371716520822855591314493319767367431398931119851977506729543312047951899604439030019491260081040990938967716159358392227334365039372198986268096209459849")),
		E: 65537,
	},
	D: new(big.Int).SetBytes([]byte("461579968995302206903668767707210964735085492522635628957198957583111454244940183771674601725364180912942231065454668307378255843154297051555758320994756816020539158735909247482759806268093751895731291197545791165090939932015640031654692239655844740605736821092967175273039877226144432347206530284594708702991585085188575404072645386771092245926921053481767402838826062957983965538492063698733659386097539617873374256176276826936109369750765776821641693180980373773752072162691423322157428449607057679370861520370759296096772282285422992415494913945700691954153758980909078364412778938402165666630101588894520739310156058160654356606833101384081665225936187857861892327317928809412742890280594774860485035816087110509854586540054690030500550630644457215290827200115188224701574066831277527396615499250198310917700372562744354643982277981199132559916508059604577547451379995441433987550145569192976533815264551501529827113583102462102195119507200392473180424556307981160800093503545233156723530185117265175128674497475757441117035977938984231138763204793203657430026303817198243218262361904978806843228866921937228061197914322862509717294400743667585749133578153131647520062579845520146880496962391124160706484473861189392216652429407")),
}

func expectKeysToMatch(k1 *SplitPrivateKey, k2 *SplitPrivateKey) {
	Expect(k1.D.String()).To(Equal(k2.D.String()), "split private exponents do not match")
	Expect(k1.PublicKey.N.String()).To(Equal(k2.PublicKey.N.String()), "moduli do not match")
	Expect(k1.PublicKey.E).To(Equal(k2.PublicKey.E), "public exponents do not match")
}

var _ = Describe("SplitPrivateKey", func() {
	Context("PEM encoding", func() {
		When("Bidirectional encode/decode", func() {
			key, _ := rsa.GenerateKey(rand.Reader, 4096)
			shards, _ := SplitD(key, 2, Multiplication)
			var testShard *SplitPrivateKey

			It("Matches", func() {
				By("Successfully encoding")
				pemEncoded, err := shards[0].EncodePEM()
				Expect(err).To(BeNil())

				By("Successfully decoding")
				testShard, err = DecodePEM(pemEncoded)
				Expect(err).To(BeNil())

				By("Matching all key properties")
				expectKeysToMatch(testShard, shards[0])
			})
		})

		When("Checking an encoding against a reference", func() {
			It("Matches", func() {
				By("Successfully encoding")
				pemEncoded, err := mockSplitPrivateKey.EncodePEM()
				Expect(err).To(BeNil())

				By("Matching all key properties")
				Expect(pemEncoded).To(Equal(mockPemEncodedKey))
			})
		})

		When("Checking a decoding against a reference", func() {
			It("Matches", func() {
				By("Successfully decoding")
				testShard, err := DecodePEM(mockPemEncodedKey)
				Expect(err).To(BeNil())

				By("Matching all key properties")
				expectKeysToMatch(testShard, mockSplitPrivateKey)
			})
		})
	})
})
